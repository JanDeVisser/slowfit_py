# Generated by Django 3.0.8 on 2020-07-30 15:22

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import slowfit.models.base


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Asset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assetOfModel', models.CharField(max_length=30)),
                ('assetOfID', models.IntegerField()),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('tags', models.CharField(blank=True, max_length=30)),
                ('mimeType', models.CharField(blank=True, max_length=40)),
                ('asset', models.FileField(upload_to=slowfit.models.base.asset_directory)),
            ],
            options={
                'ordering': ['assetOfModel', 'assetOfID', 'name'],
            },
        ),
        migrations.CreateModel(
            name='BikeType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, verbose_name='Name')),
                ('description', models.CharField(blank=True, max_length=200, verbose_name='Description')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model, slowfit.models.base.RegisteredModel),
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, verbose_name='Name')),
                ('description', models.CharField(blank=True, max_length=200, verbose_name='Description')),
                ('URL', models.URLField(null=True, verbose_name='Website')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model, slowfit.models.base.RegisteredModel, slowfit.models.base.Annotateable, slowfit.models.base.AssetOwner),
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('isoCode', models.CharField(max_length=5)),
                ('isoCode3', models.CharField(max_length=5)),
            ],
            bases=(models.Model, slowfit.models.base.RegisteredModel),
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, verbose_name='Name')),
                ('description', models.CharField(blank=True, max_length=200, verbose_name='Description')),
                ('firstName', models.CharField(max_length=30)),
                ('lastName', models.CharField(max_length=30)),
                ('address', models.TextField(blank=True)),
                ('email', models.EmailField(max_length=60, unique=True, verbose_name='email address')),
                ('phoneMain', models.CharField(max_length=20, unique=True, verbose_name='main phone number')),
                ('phoneAlt', models.CharField(blank=True, max_length=20, verbose_name='alternative phone number')),
                ('dateOfBirth', models.DateField(blank=True, verbose_name='date of birth')),
                ('height', models.PositiveSmallIntegerField(blank=True, verbose_name='height in cm')),
                ('inseam', models.PositiveSmallIntegerField(blank=True, verbose_name='inseam in cm')),
                ('armLength', models.PositiveSmallIntegerField(blank=True, verbose_name='arm length in cm')),
            ],
            options={
                'ordering': ['lastName', 'firstName'],
            },
            bases=(models.Model, slowfit.models.base.RegisteredModel),
        ),
        migrations.CreateModel(
            name='FitSheet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, verbose_name='Name')),
                ('description', models.CharField(blank=True, max_length=200, verbose_name='Description')),
                ('hx', models.PositiveSmallIntegerField(verbose_name='selected handlebar reach (mm)')),
                ('hy', models.PositiveSmallIntegerField(verbose_name='selected handlebar stack (mm)')),
                ('sx', models.SmallIntegerField(verbose_name='selected current saddle X')),
                ('sy', models.PositiveSmallIntegerField(verbose_name='selected current saddle Y')),
                ('crankLength', models.PositiveSmallIntegerField(choices=[(165, '165mm'), (167.5, '167.5mm'), (170, '170mm'), (172.5, '172.5mm'), (175, '175mm')], verbose_name='selected current crank length')),
                ('saddle', models.CharField(blank=True, max_length=30, verbose_name='selected saddle')),
                ('saddleHeight', models.PositiveSmallIntegerField(verbose_name='selected saddle height')),
                ('saddleSetback', models.SmallIntegerField(verbose_name='selected saddle setback/offset')),
                ('saddleBarDrop', models.SmallIntegerField(help_text='positive: saddle higher than bar, negative: bar higher than saddle', verbose_name='selected saddle to bar drop')),
            ],
            bases=(models.Model, slowfit.models.base.RegisteredModel),
        ),
        migrations.CreateModel(
            name='Frame',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, verbose_name='Name')),
                ('description', models.CharField(blank=True, max_length=200, verbose_name='Description')),
                ('URL', models.URLField(blank=True, null=True, verbose_name='Webpage')),
                ('yearFrom', models.PositiveSmallIntegerField(null=True, verbose_name='First Model Year')),
                ('yearTo', models.PositiveSmallIntegerField(null=True, verbose_name='Last Model Year')),
                ('bikeType', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='slowfit.BikeType', verbose_name='Bike Type')),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='slowfit.Brand', verbose_name='Brand')),
            ],
            options={
                'ordering': ['brand_id', 'name'],
            },
            bases=(models.Model, slowfit.models.base.RegisteredModel, slowfit.models.base.Annotateable, slowfit.models.base.AssetOwner),
        ),
        migrations.CreateModel(
            name='FrameSize',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, verbose_name='Name')),
                ('description', models.CharField(blank=True, max_length=200, verbose_name='Description')),
                ('headTubeAngle', models.FloatField()),
                ('stack', models.PositiveSmallIntegerField()),
                ('reach', models.PositiveSmallIntegerField()),
                ('frame', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='slowfit.Frame')),
            ],
            options={
                'ordering': ['frame_id', 'name'],
            },
            bases=(models.Model, slowfit.models.base.RegisteredModel, slowfit.models.base.Annotateable, slowfit.models.base.AssetOwner),
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, verbose_name='Name')),
                ('description', models.CharField(blank=True, max_length=200, verbose_name='Description')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model, slowfit.models.base.RegisteredModel),
        ),
        migrations.CreateModel(
            name='RoadFitSheet',
            fields=[
                ('fitsheet_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='slowfit.FitSheet')),
                ('webX', models.PositiveSmallIntegerField(blank=True, verbose_name='selected handlebar web X (reach)')),
                ('webY', models.PositiveSmallIntegerField(blank=True, verbose_name='selected handlebar web Y (stack)')),
                ('barWidth', models.PositiveSmallIntegerField(blank=True, verbose_name='selected handlebar width')),
                ('barDrop', models.PositiveSmallIntegerField(blank=True, verbose_name='selected handlebar drop')),
                ('barReach', models.PositiveSmallIntegerField(blank=True, verbose_name='selected handlebar reach')),
            ],
            options={
                'abstract': False,
            },
            bases=('slowfit.fitsheet',),
        ),
        migrations.CreateModel(
            name='TTFitSheet',
            fields=[
                ('fitsheet_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='slowfit.FitSheet')),
                ('aeroBar', models.CharField(blank=True, max_length=30, verbose_name='selected aerobar')),
                ('padWidth', models.PositiveSmallIntegerField(blank=True, verbose_name='pad width (mm)')),
                ('extensions', models.CharField(blank=True, max_length=30, verbose_name='selected extensions')),
            ],
            options={
                'abstract': False,
            },
            bases=('slowfit.fitsheet',),
        ),
        migrations.CreateModel(
            name='Visit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, verbose_name='Name')),
                ('description', models.CharField(blank=True, max_length=200, verbose_name='Description')),
                ('date', models.DateTimeField(verbose_name='date of visit')),
                ('purpose', models.TextField(blank=True, verbose_name='purpose of visit')),
                ('experience', models.TextField(blank=True, verbose_name='cycling experience')),
                ('goals', models.TextField(blank=True, verbose_name='athletic goals')),
                ('injuries', models.TextField(blank=True, verbose_name='injuries and limitations')),
                ('weight', models.PositiveSmallIntegerField(blank=True, verbose_name='weight in kg')),
                ('customerConcerns', models.TextField(blank=True, verbose_name="rider's specific concerns")),
                ('fitterConcerns', models.TextField(blank=True, verbose_name="fitter's concerns")),
                ('pedalSystem', models.TextField(choices=[('Shimano', 'Shimano'), ('Look', 'Look'), ('Time', 'Time')], verbose_name='pedal system')),
                ('hx', models.PositiveSmallIntegerField(verbose_name='current handlebar reach (mm)')),
                ('hy', models.PositiveSmallIntegerField(verbose_name='current handlebar stack (mm)')),
                ('sx', models.SmallIntegerField(verbose_name='current saddle X')),
                ('sy', models.PositiveSmallIntegerField(verbose_name='current saddle Y')),
                ('crankLength', models.PositiveSmallIntegerField(choices=[(165, '165mm'), (167.5, '167.5mm'), (170, '170mm'), (172.5, '172.5mm'), (175, '175mm')], verbose_name='current crank length')),
                ('saddle', models.CharField(blank=True, max_length=30, verbose_name='current saddle')),
                ('saddleHeight', models.PositiveSmallIntegerField(verbose_name='current saddle height')),
                ('saddleSetback', models.SmallIntegerField(verbose_name='current saddle setback/offset')),
                ('saddleBarDrop', models.SmallIntegerField(help_text='positive: saddle higher than bar, negative: bar higher than saddle', verbose_name='current saddle to bar drop')),
                ('currentBike', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='slowfit.FrameSize', verbose_name='current bike')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='slowfit.Customer')),
            ],
            options={
                'get_latest_by': 'date',
                'order_with_respect_to': 'customer',
            },
            bases=(models.Model, slowfit.models.base.RegisteredModel),
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('posted', models.DateTimeField(auto_now_add=True)),
                ('noteForModel', models.CharField(max_length=30)),
                ('noteForID', models.IntegerField()),
                ('text', models.TextField()),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['noteForModel', 'noteForID', '-posted'],
            },
        ),
        migrations.CreateModel(
            name='ImportLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('sheetId', models.TextField()),
                ('title', models.TextField(null=True)),
                ('status', models.TextField(choices=[('Start', 'Start'), ('Busy', 'Busy'), ('Done', 'Done'), ('Errors', 'Errors')])),
                ('frameCount', models.PositiveSmallIntegerField(default=0)),
                ('log', models.TextField(null=True)),
                ('importedBy', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-timestamp',),
            },
        ),
        migrations.AddField(
            model_name='frame',
            name='imported',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='slowfit.ImportLog'),
        ),
        migrations.AddField(
            model_name='frame',
            name='material',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='slowfit.Material', verbose_name='Material'),
        ),
        migrations.AddField(
            model_name='fitsheet',
            name='bikeUsed',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='slowfit.FrameSize', verbose_name='bike used'),
        ),
        migrations.AddField(
            model_name='fitsheet',
            name='visit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='slowfit.Visit'),
        ),
        migrations.AddField(
            model_name='brand',
            name='country',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='slowfit.Country', verbose_name='Country'),
        ),
        migrations.AddField(
            model_name='brand',
            name='imported',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='slowfit.ImportLog'),
        ),
        migrations.CreateModel(
            name='Trial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, verbose_name='Name')),
                ('description', models.CharField(blank=True, max_length=200, verbose_name='Description')),
                ('hx', models.PositiveSmallIntegerField(verbose_name='handlebar reach (mm)')),
                ('hy', models.PositiveSmallIntegerField(verbose_name='handlebar stack (mm)')),
                ('sx', models.SmallIntegerField(verbose_name='saddle X')),
                ('sy', models.PositiveSmallIntegerField(verbose_name='saddle Y')),
                ('fitSheet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='slowfit.FitSheet')),
            ],
            options={
                'order_with_respect_to': 'fitSheet',
            },
            bases=(models.Model, slowfit.models.base.RegisteredModel),
        ),
        migrations.AlterOrderWithRespectTo(
            name='fitsheet',
            order_with_respect_to='visit',
        ),
    ]
